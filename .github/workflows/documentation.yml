name: Build docs
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: 17
      JAVA_DISTRIBUTION: temurin
      PYTHON_VERSION: 3.9
      MKDOCS_CONFIG_FILE: config/mkdocs/mkdocs-config.yml
      MKDOCS_BUILD_DIR: build/mkdocs
      MKDOCS_SITE_SUBDIR: docs
      DOKKA_BUILD_DIR: build/dokka/htmlMultiModule
      DOKKA_SITE_SUBDIR: api
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Material for MkDocs
        run: |
          for i in {1..3}; do pip install mkdocs-material && break || sleep 5; done
          pip show mkdocs-material > /dev/null || { echo "Failed to install mkdocs-material"; exit 1; }

      - name: Install MkDocs Minify Plugin
        run: |
          for i in {1..3}; do pip install mkdocs-minify-plugin && break || sleep 5; done
          pip show mkdocs-minify-plugin > /dev/null || { echo "Failed to install mkdocs-minify-plugin"; exit 1; }

      - name: Build MkDocs
        run: mkdocs build -f ${{ env.MKDOCS_CONFIG_FILE }} || { echo "MkDocs build failed"; exit 1; }

      - name: Build Dokka
        run: ./gradlew dokkaHtmlMultiModule

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Checkout GitHub Pages Branch
        run: |
          git checkout gh-pages || git checkout --orphan gh-pages
          git rm -rf . || true

      - name: Copy Documentation
        run: |
          mkdir -p ${{ env.MKDOCS_SITE_SUBDIR }} ${{ env.DOKKA_SITE_SUBDIR }}
          if [ -d "${{ env.MKDOCS_BUILD_DIR }}" ]; then
            cp -r ${{ env.MKDOCS_BUILD_DIR }}/* ${{ env.MKDOCS_SITE_SUBDIR }}/
          else
            echo "Warning: ${{ env.MKDOCS_BUILD_DIR }} not found"
          fi
          if [ -d "${{ env.DOKKA_BUILD_DIR }}" ]; then
            cp -r ${{ env.DOKKA_BUILD_DIR }}/* ${{ env.DOKKA_SITE_SUBDIR }}/
          else
            echo "Warning: ${{ env.DOKKA_BUILD_DIR }} not found"
          fi

      - name: Commit and Push
        run: |
          git add ${{ env.MKDOCS_SITE_SUBDIR }} ${{ env.DOKKA_SITE_SUBDIR }} || exit 1
          git commit -m "Update Documentation from commit ${GITHUB_SHA}" || echo "Nothing to commit"
          git push --force origin gh-pages || exit 1
